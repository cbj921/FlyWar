{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\enemyPrefab/assets\\Script\\enemyPrefab\\spacePlane.js"],"names":["cc","Class","extends","Component","properties","startBulletAttack","startImpactAttack","startHealth","startBulletSpeed","bulletFre","moveVenticalDuration","moveVenticalDistance","healthBar","ProgressBar","bulletPrefab","Prefab","initData","spacePlaneObject","JSON","parse","sys","localStorage","getItem","bulletAttack","impactAttack","health","bulletSpeed","coin","setItem","stringify","mainPlaneData","moveAction","randomPosition","moveTo","v2","node","x","backAction","callFunc","runAction","sequence","max","min","posY","posX","Math","floor","random","setPosition","initHealthBar","varHealth","progress","updateHealthBar","ratio","parent","destroy","bulletInit","bulletPool","NodePool","bulletArray","initCount","i","bullet","instantiate","put","creatBullet","bulletCallback","size","get","position","y","bulletAction","schedule","bulletNode","duration","finished","shootAction","onCollisionEnter","other","self","tag","mainWeapon","attackNumber","onLoad","update","dt"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,2BAAmB,CADX,EACc;AACtBC,2BAAmB,CAFX,EAEc;AACtBC,qBAAa,CAHL,EAGS;AACjBC,0BAAkB,CAJV,EAIa;AACrBC,mBAAW,CALH,EAKM;;AAEdC,8BAAsB,CAPd;AAQRC,8BAAsB,CARd;;AAURC,mBAAWZ,GAAGa,WAVN;AAWRC,sBAAad,GAAGe;AAXR,KAHP;;AAiBLC,YAjBK,sBAiBM;AACP,aAAKC,gBAAL,GAAwBC,KAAKC,KAAL,CAAWnB,GAAGoB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAxB,CADO,CAC8E;AACrF,YAAI,KAAKL,gBAAL,IAAyB,IAA7B,EAAmC;AAC/B,iBAAKA,gBAAL,GAAwB;AACpBM,8BAAc,KAAKlB,iBADC,EACkB;AACtCmB,8BAAc,KAAKlB,iBAFC,EAEkB;AACtCmB,wBAAQ,KAAKlB,WAHO,EAGO;AAC3BmB,6BAAa,KAAKlB,gBAJE,EAIgB;AACpCC,2BAAW,KAAKA,SALI,EAKO;AAC3BkB,sBAAK;AANe,aAAxB;AAQA3B,eAAGoB,GAAH,CAAOC,YAAP,CAAoBO,OAApB,CAA4B,kBAA5B,EAAgDV,KAAKW,SAAL,CAAe,KAAKZ,gBAApB,CAAhD;AACA,iBAAKA,gBAAL,GAAwBC,KAAKC,KAAL,CAAWnB,GAAGoB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,kBAA5B,CAAX,CAAxB,CAV+B,CAUsD;AACxF,SAbM,CAaL;;AAEF,aAAKQ,aAAL,GAAqBZ,KAAKC,KAAL,CAAWnB,GAAGoB,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,iBAA5B,CAAX,CAArB,CAfO,CAeyE;AACnF,KAjCI;AAmCLS,cAnCK,wBAmCQ;AAAA;;AACT,aAAKC,cAAL,CAAoB,GAApB,EAAyB,CAAC,GAA1B,EADS,CACuB;;AAEhC,YAAID,aAAa/B,GAAGiC,MAAH,CAAU,KAAKvB,oBAAf,EAAqCV,GAAGkC,EAAH,CAAM,KAAKC,IAAL,CAAUC,CAAhB,EAAmB,KAAKzB,oBAAxB,CAArC,CAAjB,CAHS,CAG8F;;AAEvG,aAAK0B,UAAL,GAAkBrC,GAAGsC,QAAH,CAAY,YAAI;AAC9B;AACA,kBAAKN,cAAL,CAAoB,GAApB,EAAyB,CAAC,GAA1B;AACAD,yBAAa/B,GAAGiC,MAAH,CAAU,MAAKvB,oBAAf,EAAqCV,GAAGkC,EAAH,CAAM,MAAKC,IAAL,CAAUC,CAAhB,EAAmB,MAAKzB,oBAAxB,CAArC,CAAb,CAH8B,CAGqE;AACnG,kBAAKwB,IAAL,CAAUI,SAAV,CAAoBvC,GAAGwC,QAAH,CAAYT,UAAZ,EAAuB,MAAKM,UAA5B,CAApB;AACH,SALiB,CAAlB;;AAOA,aAAKF,IAAL,CAAUI,SAAV,CAAoBvC,GAAGwC,QAAH,CAAYT,UAAZ,EAAuB,KAAKM,UAA5B,CAApB;AACH,KAhDI;AAkDLL,kBAlDK,0BAkDUS,GAlDV,EAkDeC,GAlDf,EAkDoB;AACrB;AACA,YAAIC,OAAO,IAAX,CAFqB,CAEJ;AACjB,YAAIC,OAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBN,MAAMC,GAAvB,CAAX,IAA0CA,GAArD,CAHqB,CAGqC;AAC1D,aAAKP,IAAL,CAAUa,WAAV,CAAsBJ,IAAtB,EAA4BD,IAA5B;AACH,KAvDI;AAyDLM,iBAzDK,2BAyDU;AACX;AACA;AACA,aAAKC,SAAL,GAAe,KAAKjC,gBAAL,CAAsBQ,MAArC;AACA,aAAKb,SAAL,CAAeuC,QAAf,GAA0B,CAA1B;AACH,KA9DI;AAgELC,mBAhEK,6BAgEY;AACb,YAAIC,QAAQ,KAAKH,SAAL,GAAe,KAAKjC,gBAAL,CAAsBQ,MAAjD;AACA,aAAKb,SAAL,CAAeuC,QAAf,GAA0BE,KAA1B;AACA,YAAGA,SAAS,CAAZ,EAAc;AACV,iBAAKlB,IAAL,CAAUmB,MAAV,GAAmB,IAAnB;AACA,iBAAKnB,IAAL,CAAUoB,OAAV;AACH;AACJ,KAvEI;;;AAyEL;AACAC,cA1EK,sBA0EM1C,YA1EN,EA0EmB;AACpB,aAAK2C,UAAL,GAAkB,IAAIzD,GAAG0D,QAAP,EAAlB;AACA,aAAKC,WAAL,GAAmB,EAAnB;AACA,YAAIC,YAAY,EAAhB;AACA,aAAI,IAAIC,IAAE,CAAV,EAAYA,IAAED,SAAd,EAAwBC,GAAxB,EAA4B;AACxB,gBAAIC,SAAS9D,GAAG+D,WAAH,CAAejD,YAAf,CAAb;AACA,iBAAK2C,UAAL,CAAgBO,GAAhB,CAAoBF,MAApB;AACH;AACJ,KAlFI;AAoFLG,eApFK,yBAoFQ;AAAA;;AACT,aAAKC,cAAL,GAAsB,YAAI;AACtB;AACA,gBAAIJ,SAAS,IAAb;AACA,gBAAI,OAAKL,UAAL,CAAgBU,IAAhB,KAAyB,CAA7B,EAAgC;AAAE;AAC9BL,yBAAS,OAAKL,UAAL,CAAgBW,GAAhB,EAAT;AACH,aAFD,MAEO;AAAE;AACLN,yBAAS9D,GAAG+D,WAAH,CAAe,OAAKjD,YAApB,CAAT;AACH;AACDgD,mBAAOR,MAAP,GAAgB,OAAKnB,IAAL,CAAUmB,MAA1B,CARsB,CAQY;AAClCQ,mBAAOO,QAAP,GAAkBrE,GAAGkC,EAAH,CAAM,OAAKC,IAAL,CAAUC,CAAhB,EAAkB,OAAKD,IAAL,CAAUmC,CAA5B,CAAlB;AACA,mBAAKC,YAAL,CAAkBT,MAAlB;AACH,SAXD;;AAaA,aAAKU,QAAL,CAAc,KAAKN,cAAnB,EAAkC,KAAKjD,gBAAL,CAAsBR,SAAxD,EAdS,CAc0D;AAEtE,KApGI;AAsGL8D,gBAtGK,wBAsGQE,UAtGR,EAsGmB;AAAA;;AACpB,YAAIC,WAAW,CAAC,KAAKvC,IAAL,CAAUmC,CAAV,GAAY,IAAb,KAAoB,KAAKrD,gBAAL,CAAsBS,WAAtB,GAAkC,GAAtD,CAAf,CADoB,CACwD;AAC5E,aAAKK,UAAL,GAAkB/B,GAAGiC,MAAH,CAAUyC,QAAV,EAAmB1E,GAAGkC,EAAH,CAAM,KAAKC,IAAL,CAAUC,CAAhB,EAAkB,CAAC,IAAnB,CAAnB,CAAlB,CAFoB,CAE4C;AAChE,aAAKuC,QAAL,GAAgB3E,GAAGsC,QAAH,CAAY,YAAI;AAC5B,gBAAG,OAAKmB,UAAL,IAAmB,IAAtB,EAA2B;AAAE;AACzBgB,2BAAWlB,OAAX;AACH,aAFD,MAEK;AACD,uBAAKE,UAAL,CAAgBO,GAAhB,CAAoBS,UAApB;AACH;AACJ,SANe,CAAhB;AAOA,YAAIG,cAAc5E,GAAGwC,QAAH,CAAY,KAAKT,UAAjB,EAA4B,KAAK4C,QAAjC,CAAlB;AACAF,mBAAWlC,SAAX,CAAqBqC,WAArB;AACH,KAlHI;;;AAoHJ;;;;;AAKFC,oBAzHM,4BAyHWC,KAzHX,EAyHkBC,IAzHlB,EAyHwB;AAC7B;AACA,YAAGD,MAAME,GAAN,IAAa,CAAhB,EAAkB;AACd,iBAAK7C,IAAL,CAAUoB,OAAV;AACH;AACD,YAAGuB,MAAME,GAAN,IAAa,CAAhB,EAAkB;AACd;AACA,iBAAK9B,SAAL,IAAkB,KAAKpB,aAAL,CAAmBmD,UAAnB,CAA8BC,YAAhD;AACA,gBAAG,KAAKhC,SAAL,GAAe,CAAlB,EAAoB;AAChB,qBAAKA,SAAL,GAAgB,CAAhB;AACH;AACJ;AACJ,KArIQ;AAuILiC,UAvIK,oBAuIK;AACN,aAAKnE,QAAL;AACA,aAAKiC,aAAL;AACA,aAAKlB,UAAL;AACA,aAAKyB,UAAL,CAAgB,KAAK1C,YAArB;AACA,aAAKmD,WAAL;AACH,KA7II;AA+ILmB,UA/IK,kBA+IGC,EA/IH,EA+IO;AACR,aAAKjC,eAAL;AACH;AAjJI,CAAT","file":"spacePlane.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemyPrefab","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        startBulletAttack: 0, // 子弹攻击力\n        startImpactAttack: 0, // 撞击攻击力\n        startHealth: 0,  // 初始血量\n        startBulletSpeed: 0, // 初始子弹速度\n        bulletFre: 0, // 子弹频率\n\n        moveVenticalDuration: 0,\n        moveVenticalDistance: 0,\n\n        healthBar: cc.ProgressBar,\n        bulletPrefab:cc.Prefab,\n    },\n\n    initData() {\n        this.spacePlaneObject = JSON.parse(cc.sys.localStorage.getItem(\"spacePlaneObject\")); // 获取全局对象\n        if (this.spacePlaneObject == null) {\n            this.spacePlaneObject = {\n                bulletAttack: this.startBulletAttack, // 子弹攻击力\n                impactAttack: this.startImpactAttack, // 撞击攻击力\n                health: this.startHealth,  // 初始血量\n                bulletSpeed: this.startBulletSpeed, // 初始子弹速度\n                bulletFre: this.bulletFre, // 子弹频率\n                coin:700,\n            };\n            cc.sys.localStorage.setItem(\"spacePlaneObject\", JSON.stringify(this.spacePlaneObject));\n            this.spacePlaneObject = JSON.parse(cc.sys.localStorage.getItem(\"spacePlaneObject\")); // 获取全局对象\n        } // 初始化数据\n\n        this.mainPlaneData = JSON.parse(cc.sys.localStorage.getItem(\"mainPlaneObject\"));// 获取飞机数据\n    },\n\n    moveAction() {\n        this.randomPosition(380, -400); // 不要问我为什么是这个数值，我测试出来的\n\n        let moveAction = cc.moveTo(this.moveVenticalDuration, cc.v2(this.node.x, this.moveVenticalDistance));  // 移动到（0，-1100）的位置\n\n        this.backAction = cc.callFunc(()=>{\n            // 到底部回到顶部回调函数\n            this.randomPosition(380, -400); \n            moveAction = cc.moveTo(this.moveVenticalDuration, cc.v2(this.node.x, this.moveVenticalDistance));  // 重新设置 x 值\n            this.node.runAction(cc.sequence(moveAction,this.backAction));\n        });\n\n        this.node.runAction(cc.sequence(moveAction,this.backAction));\n    },\n    \n    randomPosition(max, min) {\n        //随机出现位置\n        let posY = 1020; // 起始纵坐标固定\n        let posX = Math.floor(Math.random() * (max - min)) + min; // \n        this.node.setPosition(posX, posY);\n    },\n\n    initHealthBar(){\n        // 更新血条，让血回满\n        // 初始化血量\n        this.varHealth=this.spacePlaneObject.health;\n        this.healthBar.progress = 1;\n    },\n\n    updateHealthBar(){\n        let ratio = this.varHealth/this.spacePlaneObject.health;\n        this.healthBar.progress = ratio;\n        if(ratio == 0){\n            this.node.parent = null;\n            this.node.destroy();\n        }\n    },\n\n    //子弹\n    bulletInit(bulletPrefab){\n        this.bulletPool = new cc.NodePool();\n        this.bulletArray = [];\n        let initCount = 10;\n        for(let i=0;i<initCount;i++){\n            let bullet = cc.instantiate(bulletPrefab);\n            this.bulletPool.put(bullet);\n        }\n    },\n\n    creatBullet(){\n        this.bulletCallback = ()=>{\n            // 计时器回调函数\n            let bullet = null;\n            if (this.bulletPool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\n                bullet = this.bulletPool.get();\n            } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\n                bullet = cc.instantiate(this.bulletPrefab);\n            }\n            bullet.parent = this.node.parent; // 将生成的子弹加入canvas节点\n            bullet.position = cc.v2(this.node.x,this.node.y);\n            this.bulletAction(bullet);\n        };\n\n        this.schedule(this.bulletCallback,this.spacePlaneObject.bulletFre);//\n        \n    },\n\n    bulletAction(bulletNode){\n        let duration = (this.node.y+1100)/(this.spacePlaneObject.bulletSpeed*100);  // 计算时间，这样不管在哪个位置发射子弹速度都一样了\n        this.moveAction = cc.moveTo(duration,cc.v2(this.node.x,-1100)); // 初始位置是0\n        this.finished = cc.callFunc(()=>{\n            if(this.bulletPool == null){ // 因为飞船没了后，对象池也没了\n                bulletNode.destroy();\n            }else{\n                this.bulletPool.put(bulletNode);\n            }\n        });\n        let shootAction = cc.sequence(this.moveAction,this.finished);\n        bulletNode.runAction(shootAction);\n    },\n\n     /**\n    * 当碰撞产生的时候调用\n    * @param  {Collider} other 产生碰撞的另一个碰撞组件\n    * @param  {Collider} self  产生碰撞的自身的碰撞组件\n    */\n   onCollisionEnter(other, self) {\n    // 敌机的碰撞tag暂时为，飞机：0，普通子弹：1\n    if(other.tag == 0){\n        this.node.destroy();\n    }\n    if(other.tag == 1){\n        //被子弹射中\n        this.varHealth -= this.mainPlaneData.mainWeapon.attackNumber;\n        if(this.varHealth<0){\n            this.varHealth =0;\n        }\n    }\n},\n\n    onLoad () {\n        this.initData();\n        this.initHealthBar();\n        this.moveAction();\n        this.bulletInit(this.bulletPrefab);\n        this.creatBullet();\n    },\n\n    update (dt) {\n        this.updateHealthBar();\n    },\n});\n"]}