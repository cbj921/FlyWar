{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\UI脚本/assets\\Script\\UI脚本\\coinScript.js"],"names":["cc","Class","extends","Component","properties","init","coinData","sys","localStorage","getItem","label","node","getChildByName","getComponent","Label","setItem","string","active","coinSelfGrow","coinGrow","mainPlaneWeapon","JSON","parse","mainWeapon","attackLevel","speedLevel","schedule","closeCoinSelfGrow","unscheduleAllCallbacks","hideIcon","onLoad"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAOLC,QAPK,kBAOC;AACF,aAAKC,QAAL,GAAgBN,GAAGO,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAhB,CADE,CACuD;AACzD,aAAKC,KAAL,GAAa,KAAKC,IAAL,CAAUC,cAAV,CAAyB,YAAzB,EAAuCC,YAAvC,CAAoDb,GAAGc,KAAvD,CAAb,CAFE,CAE0E;AAC5E,YAAG,KAAKR,QAAL,IAAiB,IAApB,EAAyB;AACrB;AACA,iBAAKA,QAAL,GAAgB,IAAhB,CAFqB,CAEC;AACtBN,eAAGO,GAAH,CAAOC,YAAP,CAAoBO,OAApB,CAA4B,UAA5B,EAAuC,KAAKT,QAA5C;AACH;AACD,aAAKI,KAAL,CAAWM,MAAX,GAAoB,KAAKV,QAAzB;AACA,aAAKK,IAAL,CAAUM,MAAV,GAAmB,IAAnB;AACH,KAjBI;AAmBLC,gBAnBK,0BAmBS;AAAA;;AACV;AACA,aAAKC,QAAL,GAAgB,YAAI;AAChB,gBAAIb,WAAWN,GAAGO,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAf;AACA,gBAAIW,kBAAkBC,KAAKC,KAAL,CAAWtB,GAAGO,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,iBAA5B,CAAX,EAA2Dc,UAAjF;AACA;AACAjB,uBAAWA,WAAS,CAAT,GAAW,GAAX,GAAe,CAACc,gBAAgBI,WAAhB,GAA4BJ,gBAAgBK,UAA7C,IAAyD,EAAnF,CAJgB,CAIwE;AACxF,kBAAKf,KAAL,CAAWM,MAAX,GAAoBV,QAApB;AACAN,eAAGO,GAAH,CAAOC,YAAP,CAAoBO,OAApB,CAA4B,UAA5B,EAAwCT,QAAxC;AACH,SAPD;AAQA,aAAKoB,QAAL,CAAc,KAAKP,QAAnB,EAA4B,EAA5B,EAVU,CAUuB;AACpC,KA9BI;AAgCLQ,qBAhCK,+BAgCc;AACf;AACA,aAAKC,sBAAL;AACH,KAnCI;AAqCLC,YArCK,sBAqCK;AACN,aAAKlB,IAAL,CAAUM,MAAV,GAAmB,KAAnB;AACH,KAvCI;AAyCLa,UAzCK,oBAyCK,CAET;AA3CI;;AA6CL;AA7CJ","file":"coinScript.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\UI脚本","sourcesContent":["\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n    },\n\n    init(){\n        this.coinData = cc.sys.localStorage.getItem(\"coinData\"); // 获取金币的数据\n        this.label = this.node.getChildByName(\"coinNumber\").getComponent(cc.Label); // 获取标签组件\n        if(this.coinData == null){\n            // 如果获取不到金币的数据说明为第一次游戏\n            this.coinData = 5000; // 初始金币为 5000\n            cc.sys.localStorage.setItem(\"coinData\",this.coinData);\n        }\n        this.label.string = this.coinData;\n        this.node.active = true;\n    },\n\n    coinSelfGrow(){\n        // 金币自增长\n        this.coinGrow = ()=>{\n            let coinData = cc.sys.localStorage.getItem(\"coinData\");\n            let mainPlaneWeapon = JSON.parse(cc.sys.localStorage.getItem('mainPlaneObject')).mainWeapon;\n            // 金币的增长数量 = 基数100+主武器速度和伤害等级的和*50\n            coinData = coinData-0+100+(mainPlaneWeapon.attackLevel+mainPlaneWeapon.speedLevel)*50 ; // 这里用了一个JS数据转换技巧，先减0，将字符串变成数字类型\n            this.label.string = coinData;\n            cc.sys.localStorage.setItem('coinData', coinData);\n        }\n        this.schedule(this.coinGrow,60); // 60秒执行一次，即60s获得金币\n    },\n\n    closeCoinSelfGrow(){\n        // 关闭金币自增长，因为在进行游戏过程中不要自增长\n        this.unscheduleAllCallbacks();\n    },\n\n    hideIcon(){\n        this.node.active = false;\n    },\n\n    onLoad () {\n        \n    },\n\n    // update (dt) {},\n});\n"]}