{"version":3,"sources":["waveRobot.js"],"names":["cc","Class","extends","Component","properties","startBulletAttack","startImpactAttack","startHealth","startBulletSpeed","bulletFre","moveHorizontalDuration","moveVenticalDuration","moveHorizontalDistance","moveVenticalDistance","healthBar","ProgressBar","bulletPrefab","Prefab","initData","waveRobotObject","JSON","parse","sys","localStorage","getItem","bulletAttack","impactAttack","health","bulletSpeed","coin","setItem","stringify","mainPlaneData","moveAction","randomPosition","moveRight","moveBy","v2","easing","easeSineInOut","moveLeft","moveHorizontal","repeat","sequence","moveVentical","moveTo","node","x","spawn","backAction","callFunc","runAction","max","min","posY","posX","Math","floor","random","setPosition","initHealthBar","varHealth","progress","updateHealthBar","ratio","parent","destroy","bulletInit","bulletPool","NodePool","bulletArray","initCount","i","bullet","instantiate","put","creatBullet","bulletCallback","size","get","position","y","bulletAction","schedule","bulletNode","duration","finished","shootAction","onCollisionEnter","other","self","tag","mainWeapon","attackNumber","onLoad","start","update","dt"],"mappings":"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","file":"waveRobot.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\enemyPrefab","sourcesContent":["\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        startBulletAttack: 0, // 子弹攻击力\n        startImpactAttack: 0, // 撞击攻击力\n        startHealth: 0,  // 初始血量\n        startBulletSpeed: 0, // 初始子弹速度\n        bulletFre: 0, // 子弹频率\n\n        moveHorizontalDuration: 0,\n        moveVenticalDuration: 0,\n\n        moveHorizontalDistance: 0,\n        moveVenticalDistance: 0,\n\n        healthBar: cc.ProgressBar,\n        bulletPrefab:cc.Prefab,\n    },\n\n\n    initData() {\n        this.waveRobotObject = JSON.parse(cc.sys.localStorage.getItem(\"waveRobotObject\")); // 获取全局对象\n        if (this.waveRobotObject == null) {\n            this.waveRobotObject = {\n                bulletAttack: this.startBulletAttack, // 子弹攻击力\n                impactAttack: this.startImpactAttack, // 撞击攻击力\n                health: this.startHealth,  // 初始血量\n                bulletSpeed: this.startBulletSpeed, // 初始子弹速度\n                bulletFre: this.bulletFre, // 子弹频率\n                coin:300,\n            };\n            cc.sys.localStorage.setItem(\"waveRobotObject\", JSON.stringify(this.waveRobotObject));\n            this.waveRobotObject = JSON.parse(cc.sys.localStorage.getItem(\"waveRobotObject\")); // 获取全局对象\n        } // 初始化数据\n\n        this.mainPlaneData = JSON.parse(cc.sys.localStorage.getItem(\"mainPlaneObject\"));// 获取飞机数据\n    },\n\n    moveAction() {\n        this.randomPosition(380, -400); // 不要问我为什么是这个数值，我测试出来的\n\n        let moveRight = cc.moveBy(this.moveHorizontalDuration, cc.v2(this.moveHorizontalDistance, 0)).easing(cc.easeSineInOut());\n        let moveLeft = cc.moveBy(this.moveHorizontalDuration, cc.v2(-this.moveHorizontalDistance, 0)).easing(cc.easeSineInOut());\n\n        let moveHorizontal = cc.repeat(cc.sequence(moveRight, moveLeft), 5); // 左右横移\n        let moveVentical = cc.moveTo(this.moveVenticalDuration, cc.v2(this.node.x, this.moveVenticalDistance));  // 移动到（0，-1100）的位置\n\n        let moveAction = cc.spawn(moveHorizontal, moveVentical);\n\n        this.backAction = cc.callFunc(()=>{\n            // 到底部回到顶部回调函数\n            this.randomPosition(380, -400); \n            moveVentical = cc.moveTo(this.moveVenticalDuration, cc.v2(this.node.x, this.moveVenticalDistance));  // 重新设置 x 值\n            moveAction = cc.spawn(moveHorizontal, moveVentical);\n            this.node.runAction(cc.sequence(moveAction,this.backAction));\n        });\n\n        this.node.runAction(cc.sequence(moveAction,this.backAction));\n    },\n    \n    randomPosition(max, min) {\n        //随机出现位置\n        let posY = 1020; // 起始纵坐标固定\n        let posX = Math.floor(Math.random() * (max - min)) + min; // \n        this.node.setPosition(posX, posY);\n    },\n\n    initHealthBar(){\n        // 更新血条，让血回满\n        // 初始化血量\n        this.varHealth=this.waveRobotObject.health;\n        this.healthBar.progress = 1;\n    },\n\n    updateHealthBar(){\n        let ratio = this.varHealth/this.waveRobotObject.health;\n        this.healthBar.progress = ratio;\n        if(ratio == 0){\n            this.node.parent = null;\n            this.node.destroy();\n        }\n    },\n    //子弹\n    bulletInit(bulletPrefab){\n        this.bulletPool = new cc.NodePool();\n        this.bulletArray = [];\n        let initCount = 10;\n        for(let i=0;i<initCount;i++){\n            let bullet = cc.instantiate(bulletPrefab);\n            this.bulletPool.put(bullet);\n        }\n    },\n\n    creatBullet(){\n        this.bulletCallback = ()=>{\n            // 计时器回调函数\n            let bullet = null;\n            if (this.bulletPool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\n                bullet = this.bulletPool.get();\n            } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\n                bullet = cc.instantiate(this.bulletPrefab);\n            }\n            bullet.parent = this.node.parent; // 将生成的子弹加入canvas节点\n            bullet.position = cc.v2(this.node.x,this.node.y);\n            this.bulletAction(bullet);\n        };\n\n        this.schedule(this.bulletCallback,this.waveRobotObject.bulletFre);//\n        \n    },\n\n    bulletAction(bulletNode){\n        let duration = (this.node.y+1100)/(this.waveRobotObject.bulletSpeed*100);  // 计算时间，这样不管在哪个位置发射子弹速度都一样了\n        this.moveAction = cc.moveTo(duration,cc.v2(this.node.x,-1100)); // 初始位置是0\n        this.finished = cc.callFunc(()=>{\n            if(this.bulletPool == null){ // 因为飞船没了后，对象池也没了\n                bulletNode.destroy();\n            }else{\n                this.bulletPool.put(bulletNode);\n            }\n        });\n        let shootAction = cc.sequence(this.moveAction,this.finished);\n        bulletNode.runAction(shootAction);\n    },\n    /**\n    * 当碰撞产生的时候调用\n    * @param  {Collider} other 产生碰撞的另一个碰撞组件\n    * @param  {Collider} self  产生碰撞的自身的碰撞组件\n    */\n    onCollisionEnter(other, self) {\n        // 敌机的碰撞tag暂时为，飞机：0，普通子弹：1\n        if(other.tag == 0){\n            this.node.destroy();\n        }\n        if(other.tag == 1){\n            //被子弹射中\n            this.varHealth -= this.mainPlaneData.mainWeapon.attackNumber;\n            if(this.varHealth<0){\n                this.varHealth =0;\n            }\n        }\n    },\n\n\n    onLoad() {\n        this.initData();\n        this.initHealthBar();\n        this.moveAction();\n        this.bulletInit(this.bulletPrefab);\n        this.creatBullet();\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n        this.updateHealthBar();\n    },\n});\n"]}